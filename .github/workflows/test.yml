name: Test
on: [push, pull_request]

env:
  CACHE_BIN_RELAYER_KEY: bin-relayer
  CACHE_BIN_RELAYER_PATH: ./build/yrly
  CACHE_DOCKER_TENDERMINT_KEY: docker-tendermint
  CACHE_DOCKER_TENDERMINT_DIR: /tmp/tendermint

jobs:
  relayer-build:
    name: relayer-build
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
      - name: Set up Go 1.21
        uses: actions/setup-go@v5
        with:
          go-version: 1.21
        id: go
      - name: Verify Go code style and module consistency
        run: |
          go mod tidy
          go fmt ./...
          git diff --exit-code
      - name: Run Unit test
        run: make test
      - name: Build
        run: make build
      - name: Save relayer binary cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_BIN_RELAYER_PATH }}
          key: ${{ runner.os }}-${{ env.CACHE_BIN_RELAYER_KEY }}-${{ github.sha }}

  tendermint-build:
    name: tendermint-build
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache-docker-tendermint
        with:
          path: ${{ env.CACHE_DOCKER_TENDERMINT_DIR }}
          key: ${{ runner.os }}-${{ env.CACHE_DOCKER_TENDERMINT_KEY }}-${{ hashFiles('tests/chains/tendermint/**', '!**/.git/**') }}
      - name: Build docker images
        if: steps.cache-docker-tendermint.outputs.cache-hit != 'true'
        working-directory: ./tests/chains/tendermint
        run: |
          make docker-images
      - name: Save docker images
        if: steps.cache-docker-tendermint.outputs.cache-hit != 'true'
        working-directory: ./tests/scripts
        run: |
          ./save_docker_images $CACHE_DOCKER_TENDERMINT_DIR tendermint-chain0:latest tendermint-chain1:latest

  tm2tm-test:
    name: tm2tm-test
    runs-on: ubuntu-22.04
    needs:
      - relayer-build
      - tendermint-build
    strategy:
      matrix:
        enable-telemetry:
          - 'false'
          - 'true'
    env:
      YRLY_ENABLE_TELEMETRY: ${{ matrix.enable-telemetry }}
    steps:
      - uses: actions/checkout@v4
      - name: Restore relayer binary cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_BIN_RELAYER_PATH }}
          key: ${{ runner.os }}-${{ env.CACHE_BIN_RELAYER_KEY }}-${{ github.sha }}
      - name: Restore Tendermint docker image cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_DOCKER_TENDERMINT_DIR }}
          key: ${{ runner.os }}-${{ env.CACHE_DOCKER_TENDERMINT_KEY }}-${{ hashFiles('tests/chains/tendermint/**', '!**/.git/**') }}
      - name: Load Tendermint docker images
        working-directory: ./tests/scripts
        run: |
          ./load_docker_images $CACHE_DOCKER_TENDERMINT_DIR tendermint-chain0:latest tendermint-chain1:latest
      - name: Install softwares used by test
        run: sudo apt-get install -y expect jq
      - name: Run Test
        working-directory: ./tests/cases/tm2tm
        run: |
          make network
          make test
          make network-down

  tmmock2tmmock-test:
    name: tmmock2tmmock-test
    runs-on: ubuntu-22.04
    needs:
      - relayer-build
      - tendermint-build
    strategy:
      matrix:
        enable-telemetry:
          - 'false'
          - 'true'
    env:
      YRLY_ENABLE_TELEMETRY: ${{ matrix.enable-telemetry }}
    steps:
      - uses: actions/checkout@v4
      - name: Restore relayer binary cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_BIN_RELAYER_PATH }}
          key: ${{ runner.os }}-${{ env.CACHE_BIN_RELAYER_KEY }}-${{ github.sha }}
      - name: Restore Tendermint docker image cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_DOCKER_TENDERMINT_DIR }}
          key: ${{ runner.os }}-${{ env.CACHE_DOCKER_TENDERMINT_KEY }}-${{ hashFiles('tests/chains/tendermint/**', '!**/.git/**') }}
      - name: Load Tendermint docker images
        working-directory: ./tests/scripts
        run: |
          ./load_docker_images $CACHE_DOCKER_TENDERMINT_DIR tendermint-chain0:latest tendermint-chain1:latest
      - name: Run Test
        working-directory: ./tests/cases/tmmock2tmmock
        run: |
          make network
          make test
          make network-down
